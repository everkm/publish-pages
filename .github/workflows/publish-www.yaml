name: publish-www Release

on:
  push:
    tags:
      - "publish-www@v*" # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:

    runs-on: ubuntu-latest

    permissions:
      contents: write

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - uses: pnpm/action-setup@v2
      name: Install pnpm
      with:
        version: 8
        run_install: false

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - uses: actions/cache@v3
      name: Setup pnpm cache
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: dist
      run: |
        cd packages/publish-www && pnpm i && make dist
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > $HOME/.ssh/id_rsa_daobox
        # mkdir $HOME/.ssh
        # echo "${{ secrets.SSH_PRIVATE_KEY }}" > $HOME/.ssh/id_rsa_daobox
        # chmod 600 $HOME/.ssh/id_rsa_daobox
        # ssh-keygen -lf $HOME/.ssh/id_rsa_daobox
        # which scp
        # ssh -o StrictHostKeyChecking=no root@y5.liveio.cn -p 11022 -i $HOME/.ssh/id_rsa_daobox "cat /etc/issue"
      # apt-get update && apt-get install -y rsync
      # ssh-keyscan -p 11022 y5.liveio.cn > $HOME/.ssh/known_hosts
      # eval $(ssh-agent)
      # ssh-add ~/.ssh/id_rsa
      # echo HostKeyAlgorithms         +ssh-rsa > $HOME/.ssh/config
      # echo PubkeyAcceptedKeyTypes    +ssh-rsa >> $HOME/.ssh/config
      # rsync -e "ssh -o StrictHostKeyChecking=no" -P 11022 -r cd packages/publish-www/dist/ root@y5.liveio.cn:/data/www/publish-www/

    - uses: addnab/docker-run-action@v3
      with:
        image: instrumentisto/rsync-ssh
        options: -v ${{ github.workspace }}:/work -e ABC=123
        run: |
          echo "Running Script"
          cd /work/
          ls

    - name: Deploy to Staging server
      uses: easingthemes/ssh-deploy@main
      with:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        ARGS: "-rlgoDzvc -i"
        SOURCE: "packages/publish-www/dist/"
        REMOTE_HOST: y5.liveio.cn
        REMOTE_PORT: 11022
        REMOTE_USER: root
        TARGET: "/data/www/publish-www/"
        EXCLUDE: "/dist/, /node_modules/"
        # SCRIPT_BEFORE: |
        #   whoami
        #   ls -al
        # SCRIPT_AFTER: |
        #   whoami
        #   ls -al
        #   echo $RSYNC_STDOUT

    # - name: Set up SSH
    #   uses: webfactory/ssh-agent@v0.8.0
    #   with:
    #     ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    # - name: Deploy using rsync
    #   run: |
    #     rsync -e "ssh -o StrictHostKeyChecking=no" -P 11022 -r cd packages/publish-www/dist/ root@y5.liveio.cn:/data/www/publish-www/
      
    # - name: Create Release
    #   id: create_release
    #   uses: softprops/action-gh-release@v1
    #   with:
    #     body: TODO New Release.
    #     draft: true
    #     prerelease: true
    #     files: |
    #       yilog.zip